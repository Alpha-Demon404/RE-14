# Mau apa lu
# Mau recode ya :v
# Hohoho tidak semudah itu Zainal :v
# Hub 089652884613 jika terjadi bug
# Uwwu >//<
# Makasih banyak udh make ^_^
# Thanks Allah SWT, dan Ortu ^_^

import base64

exec(base64.b64decode(""))
