banner() {
clear
printf "\e[0m
"
printf "\e[0m\e[1;33m   ____            _      \e[0m\e[1;32m ______                   _        \e[0m
"
printf "\e[0m\e[1;33m  |  _ \          | |     \e[0m\e[1;32m|  ____|                 | |       \e[0m
"
printf "\e[0m\e[1;33m  | |_) | __ _ ___| |__   \e[0m\e[1;32m| |__ _   _ ___  ___ __ _| |_ ___  \e[0m
"
printf "\e[0m\e[1;33m  |  _ < / _  / __|  _ \  \e[0m\e[1;32m|  __| | | / __|/ __/ _  | __/ _ \ \e[0m
"
printf "\e[0m\e[1;33m  | |_) | (_| \__ \ | | | \e[0m\e[1;32m| |  | |_| \__ \ (_| (_| | ||  __/ \e[0m
"
printf "\e[0m\e[1;33m  |____/ \__,_|___/_| |_| \e[0m\e[1;32m|_|   \__,_|___/\___\__,_|\__\___| \e[0m
"
printf "\e[0m
"
printf "\e[0m\e[1;33m       Created By HTR-TECH \e[0m\e[1;31m( \e[0m\e[1;33mTahmid Rayat \e[0m\e[1;31m)\e[0m
"
}
banner
printf "\e[0m
"
printf "\e[0m
"
printf " \e[0m\e[1;31m[\e[0m\e[1;37m+\e[0m\e[1;31m]\e[0m\e[1;33m Input Bash File Name \e[0m\e[1;32m: "; read file
if [[ ! -f $file ]]
then
printf " 

\e[0m\e[1;31m[\e[0m\e[1;37m!\e[0m\e[1;31m]\e[0m\e[1;33m File Not Found \e[0m\e[1;31m[\e[0m\e[1;37m!\e[0m\e[1;31m]
"
sleep 2
printf "\e[0m
"
printf "\e[0m
"
exit
fi
printf "

 \e[0m\e[1;31m[\e[0m\e[1;37m+\e[0m\e[1;31m]\e[0m\e[1;33m Output File Name \e[0m\e[1;32m: "; read Out
obf(){
printf "
 \e[0m\e[1;31m[\e[0m\e[1;37m+\e[0m\e[1;31m]\e[0m\e[1;33m Obfuscating...
"
sleep 3
randm1=$(cat /dev/urandom | tr -dc 'A-Za-z' | fold -w 100 | head -n 1)
randm2=$(cat /dev/urandom | tr -dc 'A-Za-z' | fold -w 100 | head -n 1)
randm3=$(cat /dev/urandom | tr -dc 'A-Za-z' | fold -w 100 | head -n 1)
randm4=$(cat /dev/urandom | tr -dc 'A-Za-z' | fold -w 100 | head -n 1)
randm5=$(cat /dev/urandom | tr -dc 'A-Za-z' | fold -w 100 | head -n 1)
randm6=$(cat /dev/urandom | tr -dc 'A-Za-z' | fold -w 100 | head -n 1)
randm7=$(cat /dev/urandom | tr -dc 'A-Za-z' | fold -w 100 | head -n 1)
randm8=$(cat /dev/urandom | tr -dc 'A-Za-z' | fold -w 100 | head -n 1)
randm9=$(cat /dev/urandom | tr -dc 'A-Za-z' | fold -w 100 | head -n 1)
randm10=$(cat /dev/urandom | tr -dc 'A-Za-z' | fold -w 100 | head -n 1)
randm11=$(cat /dev/urandom | tr -dc 'A-Za-z' | fold -w 100 | head -n 1)
randm12=$(cat /dev/urandom | tr -dc 'A-Za-z' | fold -w 100 | head -n 1)
randm13=$(cat /dev/urandom | tr -dc 'A-Za-z' | fold -w 100 | head -n 1)
randm14=$(cat /dev/urandom | tr -dc 'A-Za-z' | fold -w 100 | head -n 1)
randm15=$(cat /dev/urandom | tr -dc 'A-Za-z' | fold -w 100 | head -n 1)
randm16=$(cat /dev/urandom | tr -dc 'A-Za-z' | fold -w 100 | head -n 1)
randm17=$(cat /dev/urandom | tr -dc 'A-Za-z' | fold -w 100 | head -n 1)
randm18=$(cat /dev/urandom | tr -dc 'A-Za-z' | fold -w 100 | head -n 1)
randm19=$(cat /dev/urandom | tr -dc 'A-Za-z' | fold -w 100 | head -n 1)
randm20=$(cat /dev/urandom | tr -dc 'A-Za-z' | fold -w 100 | head -n 1)
randm21=$(cat /dev/urandom | tr -dc 'A-Za-z' | fold -w 100 | head -n 1)
randm22=$(cat /dev/urandom | tr -dc 'A-Za-z' | fold -w 100 | head -n 1)
randm23=$(cat /dev/urandom | tr -dc 'A-Za-z' | fold -w 100 | head -n 1)
randm24=$(cat /dev/urandom | tr -dc 'A-Za-z' | fold -w 100 | head -n 1)
randm25=$(cat /dev/urandom | tr -dc 'A-Za-z' | fold -w 100 | head -n 1)
randm26=$(cat /dev/urandom | tr -dc 'A-Za-z' | fold -w 100 | head -n 1)
randm27=$(cat /dev/urandom | tr -dc 'A-Za-z' | fold -w 100 | head -n 1)
randm28=$(cat /dev/urandom | tr -dc 'A-Za-z' | fold -w 100 | head -n 1)
randm29=$(cat /dev/urandom | tr -dc 'A-Za-z' | fold -w 100 | head -n 1)
randm30=$(cat /dev/urandom | tr -dc 'A-Za-z' | fold -w 100 | head -n 1)
randm31=$(cat /dev/urandom | tr -dc 'A-Za-z' | fold -w 100 | head -n 1)
randm32=$(cat /dev/urandom | tr -dc 'A-Za-z' | fold -w 100 | head -n 1)
anu=$(cat $file | base64 | tr -d '
' )
anu=$(echo "$anu" | rev)
nasa="$randm1=\"$randm2\";$randm3=\"$randm4\";$randm5=\"ch\";$randm6=\"4\";$randm7=\"\";$randm9=\"$randm10\";$randm11=\" $anu | r\";$randm12=\"$randm13\";$randm14=\"\";$randm15=\"as\";$randm16=\"$randm17\";$randm18=\"$randm19\";$randm20=\"o\";$randm21=\"6\";$randm22=\"$randm23\";$randm24=\" -d\";$randm25=\"$randm26\";$randm27=\"\";$randm28=\"b\";$randm29=\"e\";$randm30=\"v |\";Tx="Eds";$randm31=\"\""
de=''"$randm32"'=$(eval '"\"\$$randm14\$$randm29\$$randm5\$$randm7\$$randm20\$$randm11\$$randm29\$$randm30\$$randm14\$$randm28\$$randm31\$$randm15\$$randm29\$$randm21\$$randm7\$$randm6\$$randm24\$$randm31\""')'
zc='eval '"\"\$$randm27\$$randm32\$$randm14\$$randm7\""''
printf "#!/bin/bash

# Obfuscated By BashFuscate (https://github.com/htr-tech/bashfuscate)
# Created By HTR-TECH (Tahmid Rayat)
# Instagram : @tahmid.rayat
# Github : htr-tech

" >> $Out
printf "$nasa;$de;$zc" >> $Out
printf "\e[0m
"
printf " \e[0m\e[1;31m[\e[0m\e[1;37m+\e[0m\e[1;31m]\e[0m\e[1;33m Done !!
"
sleep 2
printf "\e[0m
"
printf " \e[0m\e[1;31m[\e[0m\e[1;37m+\e[0m\e[1;31m]\e[0m\e[1;33m Encrypted File Name \e[0m\e[1;32m: $Out
"
printf "\e[0m
"
printf " \e[0m\e[1;31m[\e[0m\e[1;37m+\e[0m\e[1;31m]\e[0m\e[1;33m File Saved at \e[0m\e[1;32m ~/bashfuscate/$Out\e[0m
"
sleep 2
printf "\e[0m
"
printf "\e[0m
"
}
obf
